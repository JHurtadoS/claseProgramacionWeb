---
import { Image } from "astro:assets";
import ModalRoom from "../ModalRoom.astro";
import ItemsRoom from "../ItemsRoom.astro";

export interface ItemRoom {
    icon: string;
    description: string;
}

type Props = {
    id: number;
    imageUrl: string;
    name: string;
    description: string;
    price: number;
    reserved: boolean;
    disable?: boolean;
    update?: boolean;
    canBook?: boolean;
    roomItems?: ItemRoom[];
    BathRoomItems?: ItemRoom[];
    picturesModal?: string[];
};

const {
    id,
    imageUrl,
    name,
    description,
    price,
    reserved,
    disable = true,
    update = true,
    canBook,
    roomItems,
    BathRoomItems,
    picturesModal,
} = Astro.props;

const newPrice = new Intl.NumberFormat("es-ES", {
    minimumFractionDigits: 0,
}).format(price);
---

<>
    <article id={`${id}`} class="px-5 py-3 flex-col cardShadow">
        <picture class="relative w-fit mx-auto flex">
            <Image
                class="aspect-square"
                src={imageUrl}
                alt="a"
                width={"500"}
                height={500}
                loading={"lazy"}
            />
            <figcaption
                class="absolute bottom-0 p-3 xl:py-1 bg-mainBlue bg-opacity-70 text-white
            z-20 w-full text-center text-lg xl:text-base"
            >
                <h2>{name}</h2>
            </figcaption>

            {
                canBook ? (
                    <figcaption
                        class="bookHover absolute w-full h-full  bg-black bg-opacity-15 text-white flex flex-col
            z-10  text-center  opacity-0 transition-opacity  justify-center items-center"
                        id="ButtonSeeRoom"
                    >
                        <span class=" text-6xl ">+</span>
                        <h2 class=" text-xl">Ver mas</h2>
                    </figcaption>
                ) : null
            }

            {
                reserved ? (
                    <div
                        id="overlay-reserved"
                        class="absolute w-full h-full bg-black bg-opacity-50 flex 
                    justify-center items-center top-0 "
                    >
                        <span class=" text-5xl text-white rotate-[-35deg] -translate-y-6">
                            Reservada
                        </span>
                    </div>
                ) : null
            }
        </picture>
        <h3
            class="my-3 text-lg max-lg:text-3xl xl:text-4xl text-center font-normal"
        >
            {`$${newPrice}`}
        </h3>
        {
            description ? (
                <p class="text-pretty my-3 text-lg font-medium text-justify">
                    {description}
                </p>
            ) : null
        }
        <div class="flex gap-y-2 mt-3 w-full justify-between">
            {update ? <button class="bg-black"> Modificar </button> : null}

            {disable ? <button class="toDisable"> Activar </button> : null}

            {
                canBook ? (
                    <button id="ToBook" class="bg-black min-w-full">
                        Reservar
                    </button>
                ) : null
            }
        </div>
    </article>

    <ModalRoom
        idRoom={id.toString()}
        description={description}
        picturesSrc={[""]}
    />
</>
<style>
    picture:hover {
        cursor: pointer;
        .bookHover {
            @apply opacity-100;
        }
    }
</style>
